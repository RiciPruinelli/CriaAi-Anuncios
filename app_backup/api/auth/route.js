import prisma from '../../../lib/prisma'; import bcrypt from 'bcryptjs'; import { signToken } from '../../../lib/auth'; export async function POST(req){ try{ const body = await req.json(); const { action, email, password } = body; if(action==='register'){ const passwordHash = await bcrypt.hash(password,10); const user = await prisma.user.create({ data:{ email, passwordHash } }); const token = signToken({ userId: user.id }); return new Response(JSON.stringify({ token }), { status:201 }); } if(action==='login'){ const user = await prisma.user.findUnique({ where:{ email } }); if(!user) return new Response(JSON.stringify({ error:'Usuário não encontrado' }), { status:404 }); const ok = await bcrypt.compare(password, user.passwordHash); if(!ok) return new Response(JSON.stringify({ error:'Senha incorreta' }), { status:401 }); const token = signToken({ userId: user.id }); return new Response(JSON.stringify({ token }), { status:200 }); } return new Response(JSON.stringify({ error:'Ação inválida' }), { status:400 }); }catch(e){ console.error(e); return new Response(JSON.stringify({ error:'erro' }), { status:500 }); } }

import prisma from '../../../lib/prisma'; import { supabaseAdmin } from '../../../lib/supabase'; export async function POST(req){ try{ const body = await req.json(); const { fileBase64, filename, adId, userId } = body; if(!fileBase64) return new Response(JSON.stringify({ error:'no file' }), { status:400 }); if(!process.env.SUPABASE_URL || !process.env.SUPABASE_ANON_KEY) return new Response(JSON.stringify({ error:'storage not configured' }), { status:501 }); const buffer = Buffer.from(fileBase64,'base64'); const path = `uploads/${userId}/${Date.now()}-${filename}`; const { data, error } = await supabaseAdmin.storage.from('uploads').upload(path, buffer, { upsert:false }); if(error) return new Response(JSON.stringify({ error: error.message }), { status:500 }); const publicUrl = `${process.env.SUPABASE_URL}/storage/v1/object/public/uploads/${path}`; if(process.env.DATABASE_URL && adId){ await prisma.image.create({ data:{ adId, url: publicUrl, backgroundRemoved:false } }); } return new Response(JSON.stringify({ url: publicUrl }), { status:200 }); }catch(e){ console.error(e); return new Response(JSON.stringify({ error:'upload failed' }), { status:500 }); } }
